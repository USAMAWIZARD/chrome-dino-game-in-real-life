

<!DOCTYPE html>
<html>

<head>
    recive from mobile  and process and send msg to jump to anoteer tab
    <meta charset="utf-8">
    <title>Display Webcam Stream</title>
    <script src="simplepeer.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src='/script.js'></script>
    <script src="https://unpkg.com/ml5@0.4.3/dist/ml5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/p5@1.0.0/lib/p5.js"></script>

<body>
    <video id="video" width="640" height="480" muted="muted" autoplay styl="display: none;"></video>

    <script>

        var lastvalues = []
        var noovaluestotake = 5
        video = document.getElementById('video')


        const peer = new SimplePeer(
            {
                initiator: location.hash === '#init',
                trickle: false,

            }
        )
        peer.on('signal', function (data) {

            socket.emit('makeconn', data)

        })
        peer.on('stream', function (stream) {

            video.srcObject = stream;
            video.play();

        })
        if (location.hash === '#init') { }
        else {
        }

        var results

        function removeele(element) {
            lastvalues.push(element)            //pushing from last and poping from first value of sum of postures
            lastvalues.shift()

        }

    
    
    
        const poseNet = ml5.poseNet(video,modelLoaded);
        function modelLoaded() {
            console.log("Model Loaded!");
        }
        // Listen to new 'pose' events

        poseNet.on("pose", function (results) {
            if (results.length > 0) {
               var sum = parseInt(results[0]["pose"]["leftEye"]["y"]) +
                    parseInt(results[0]["pose"]["leftAnkle"]["y"]) +
                    parseInt(results[0]["pose"]["leftEar"]["y"]) +
                    parseInt(results[0]["pose"]["leftHip"]["y"]) +
                    parseInt(results[0]["pose"]["leftKnee"]["y"]) +
                    parseInt(results[0]["pose"]["leftShoulder"]["y"]) +
                    parseInt(results[0]["pose"]["nose"]["y"]) +               //sum of all the values of user
                    parseInt(results[0]["pose"]["rightAnkle"]["y"]) +
                    parseInt(results[0]["pose"]["rightEar"]["y"]) +
                    parseInt(results[0]["pose"]["rightEye"]["y"]) +
                    parseInt(results[0]["pose"]["rightHip"]["y"]) +
                    parseInt(results[0]["pose"]["rightKnee"]["y"]) +
                    parseInt(results[0]["pose"]["rightShoulder"]["y"])




                if (lastvalues.length <= noovaluestotake) {
                    lastvalues.push(sum)        //taking a sum of last values in am array of specified length

                }
                else {
                    if (results[0]["pose"]["score"] > 0.3) {
                        removeele(sum)
                        isuserjumping()                             //adding and removing element for last value array

                    }
                }



            }

        });
        function jump() {
            console.log('user jumpedd')      // if user jump
            idel = false
        }
        function isuserjumping() {
            mxm = Math.max.apply(Math, lastvalues)
            mnm = Math.min.apply(Math, lastvalues)
          //  console.log("maximum", mxm, "minimum", mnm)
            diff = mxm - mnm                                      //to chek if user jumped
            if (diff >= 500) {
                jump()
                socket.emit('userjumped',1)
                lastvalues = []
            }
        }
    </script>
</body>

</html>